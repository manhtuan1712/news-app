// Mocks generated by Mockito 5.4.4 from annotations
// in news_app/test/unitest/usecase/home/get_source_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/core/api/error/failures.dart' as _i5;
import 'package:news_app/features/home/data/models/request/request_top_headlines_model.dart'
    as _i7;
import 'package:news_app/features/home/data/models/response/article_model.dart'
    as _i9;
import 'package:news_app/features/home/data/models/response/response_sources_model.dart'
    as _i8;
import 'package:news_app/features/home/data/models/response/response_top_headlines_model.dart'
    as _i6;
import 'package:news_app/features/home/domain/repository/home_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i3.HomeRepository {
  @override
  _i4.Future<_i2.Either<_i5.ServerFailure, _i6.ResponseTopHeadlinesModel>>
      getTopHeadlines(_i7.RequestTopHeadlinesModel? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getTopHeadlines,
              [request],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.ServerFailure,
                        _i6.ResponseTopHeadlinesModel>>.value(
                _FakeEither_0<_i5.ServerFailure, _i6.ResponseTopHeadlinesModel>(
              this,
              Invocation.method(
                #getTopHeadlines,
                [request],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.Either<_i5.ServerFailure,
                        _i6.ResponseTopHeadlinesModel>>.value(
                _FakeEither_0<_i5.ServerFailure, _i6.ResponseTopHeadlinesModel>(
              this,
              Invocation.method(
                #getTopHeadlines,
                [request],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.ServerFailure, _i6.ResponseTopHeadlinesModel>>);

  @override
  _i4.Future<_i2.Either<_i5.ServerFailure, _i8.ResponseSourcesModel>>
      getSources() => (super.noSuchMethod(
            Invocation.method(
              #getSources,
              [],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.ServerFailure, _i8.ResponseSourcesModel>>.value(
                _FakeEither_0<_i5.ServerFailure, _i8.ResponseSourcesModel>(
              this,
              Invocation.method(
                #getSources,
                [],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2
                    .Either<_i5.ServerFailure, _i8.ResponseSourcesModel>>.value(
                _FakeEither_0<_i5.ServerFailure, _i8.ResponseSourcesModel>(
              this,
              Invocation.method(
                #getSources,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.ServerFailure, _i8.ResponseSourcesModel>>);

  @override
  _i4.Future<_i2.Either<_i5.HiveFailure, String>> saveTopHeadlinesLocal(
          List<_i9.ArticleModel>? articles) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTopHeadlinesLocal,
          [articles],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.HiveFailure, String>>.value(
            _FakeEither_0<_i5.HiveFailure, String>(
          this,
          Invocation.method(
            #saveTopHeadlinesLocal,
            [articles],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.HiveFailure, String>>.value(
                _FakeEither_0<_i5.HiveFailure, String>(
          this,
          Invocation.method(
            #saveTopHeadlinesLocal,
            [articles],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.HiveFailure, String>>);
}

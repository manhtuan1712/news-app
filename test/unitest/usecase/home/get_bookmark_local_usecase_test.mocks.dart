// Mocks generated by Mockito 5.4.4 from annotations
// in news_app/test/unitest/usecase/home/get_bookmark_local_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/core/api/error/failures.dart' as _i5;
import 'package:news_app/features/bookmark/domain/repository/bookmark_repository.dart'
    as _i3;
import 'package:news_app/features/home/data/models/response/article_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BookmarkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkRepository extends _i1.Mock
    implements _i3.BookmarkRepository {
  @override
  _i4.Future<
      _i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>> saveBookmarkLocal(
    _i6.ArticleModel? article,
    bool? isRemove,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveBookmarkLocal,
          [
            article,
            isRemove,
          ],
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>.value(
            _FakeEither_0<_i5.HiveFailure, List<_i6.ArticleModel>>(
          this,
          Invocation.method(
            #saveBookmarkLocal,
            [
              article,
              isRemove,
            ],
          ),
        )),
        returnValueForMissingStub: _i4
            .Future<_i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>.value(
            _FakeEither_0<_i5.HiveFailure, List<_i6.ArticleModel>>(
          this,
          Invocation.method(
            #saveBookmarkLocal,
            [
              article,
              isRemove,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>
      getBookmarksLocal() => (super.noSuchMethod(
            Invocation.method(
              #getBookmarksLocal,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>.value(
                _FakeEither_0<_i5.HiveFailure, List<_i6.ArticleModel>>(
              this,
              Invocation.method(
                #getBookmarksLocal,
                [],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>.value(
                _FakeEither_0<_i5.HiveFailure, List<_i6.ArticleModel>>(
              this,
              Invocation.method(
                #getBookmarksLocal,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.HiveFailure, List<_i6.ArticleModel>>>);
}
